//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GVoiceEngineWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GVoiceEngine), typeof(System.Object));
		L.RegFunction("Setup", Setup);
		L.RegFunction("Update", Update);
		L.RegFunction("RegisterApplyMessageKeyCallback", RegisterApplyMessageKeyCallback);
		L.RegFunction("RegisterUploadedCallback", RegisterUploadedCallback);
		L.RegFunction("RegisterDownloadedCallback", RegisterDownloadedCallback);
		L.RegFunction("RegisterPlayFinishedCallback", RegisterPlayFinishedCallback);
		L.RegFunction("ApplyMessageKey", ApplyMessageKey);
		L.RegFunction("SetMaxMessageLength", SetMaxMessageLength);
		L.RegFunction("StartRecord", StartRecord);
		L.RegFunction("StopRecord", StopRecord);
		L.RegFunction("Upload", Upload);
		L.RegFunction("StartPlay", StartPlay);
		L.RegFunction("StopPlay", StopPlay);
		L.RegFunction("Download", Download);
		L.RegFunction("Resume", Resume);
		L.RegFunction("Pause", Pause);
		L.RegFunction("New", _CreateGVoiceEngine);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("instance", get_instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGVoiceEngine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GVoiceEngine obj = new GVoiceEngine();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GVoiceEngine.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Setup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.Setup(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			obj.Update();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterApplyMessageKeyCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			System.Action<bool> arg0 = (System.Action<bool>)ToLua.CheckDelegate<System.Action<bool>>(L, 2);
			obj.RegisterApplyMessageKeyCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterUploadedCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			System.Action<bool,string,string> arg0 = (System.Action<bool,string,string>)ToLua.CheckDelegate<System.Action<bool,string,string>>(L, 2);
			obj.RegisterUploadedCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterDownloadedCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			System.Action<bool,string,string> arg0 = (System.Action<bool,string,string>)ToLua.CheckDelegate<System.Action<bool,string,string>>(L, 2);
			obj.RegisterDownloadedCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterPlayFinishedCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			System.Action<bool,string> arg0 = (System.Action<bool,string>)ToLua.CheckDelegate<System.Action<bool,string>>(L, 2);
			obj.RegisterPlayFinishedCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ApplyMessageKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ApplyMessageKey(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMaxMessageLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetMaxMessageLength(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartRecord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.StartRecord(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopRecord(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			bool o = obj.StopRecord();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Upload(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.Upload(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.StartPlay(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			bool o = obj.StopPlay();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Download(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.Download(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Resume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			obj.Resume();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Pause(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GVoiceEngine obj = (GVoiceEngine)ToLua.CheckObject<GVoiceEngine>(L, 1);
			obj.Pause();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GVoiceEngine.instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

