//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class HttpAsyncWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(HttpAsync), typeof(System.Object));
		L.RegFunction("AddRequest", AddRequest);
		L.RegFunction("Start", Start);
		L.RegFunction("Stop", Stop);
		L.RegFunction("Destroy", Destroy);
		L.RegFunction("New", _CreateHttpAsync);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateHttpAsync(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				HttpDispatcher arg0 = (HttpDispatcher)ToLua.CheckObject<HttpDispatcher>(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				HttpAsync obj = new HttpAsync(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: HttpAsync.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			HttpAsync obj = (HttpAsync)ToLua.CheckObject<HttpAsync>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			System.Action<byte[],int,bool> arg2 = (System.Action<byte[],int,bool>)ToLua.CheckDelegate<System.Action<byte[],int,bool>>(L, 4);
			obj.AddRequest(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Start(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HttpAsync obj = (HttpAsync)ToLua.CheckObject<HttpAsync>(L, 1);
			obj.Start();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HttpAsync obj = (HttpAsync)ToLua.CheckObject<HttpAsync>(L, 1);
			obj.Stop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Destroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			HttpAsync obj = (HttpAsync)ToLua.CheckObject<HttpAsync>(L, 1);
			obj.Destroy();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

