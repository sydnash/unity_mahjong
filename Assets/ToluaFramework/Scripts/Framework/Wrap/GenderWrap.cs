//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GenderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Gender));
		L.RegVar("UNKNOW", get_UNKNOW, null);
		L.RegVar("MALE", get_MALE, null);
		L.RegVar("FEMALE", get_FEMALE, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Gender>.Check = CheckType;
		StackTraits<Gender>.Push = Push;
	}

	static void Push(IntPtr L, Gender arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Gender), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UNKNOW(IntPtr L)
	{
		ToLua.Push(L, Gender.UNKNOW);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MALE(IntPtr L)
	{
		ToLua.Push(L, Gender.MALE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FEMALE(IntPtr L)
	{
		ToLua.Push(L, Gender.FEMALE);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Gender o = (Gender)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

