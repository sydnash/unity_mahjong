//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_LocationServiceStatusWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(UnityEngine.LocationServiceStatus));
		L.RegVar("Stopped", get_Stopped, null);
		L.RegVar("Initializing", get_Initializing, null);
		L.RegVar("Running", get_Running, null);
		L.RegVar("Failed", get_Failed, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<UnityEngine.LocationServiceStatus>.Check = CheckType;
		StackTraits<UnityEngine.LocationServiceStatus>.Push = Push;
	}

	static void Push(IntPtr L, UnityEngine.LocationServiceStatus arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(UnityEngine.LocationServiceStatus), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Stopped(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.LocationServiceStatus.Stopped);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Initializing(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.LocationServiceStatus.Initializing);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Running(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.LocationServiceStatus.Running);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Failed(IntPtr L)
	{
		ToLua.Push(L, UnityEngine.LocationServiceStatus.Failed);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		UnityEngine.LocationServiceStatus o = (UnityEngine.LocationServiceStatus)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

