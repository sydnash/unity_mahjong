//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class AccountTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(AccountType));
		L.RegVar("ANONYMOUS", get_ANONYMOUS, null);
		L.RegVar("REGISTERED", get_REGISTERED, null);
		L.RegVar("SINA_WEIBO", get_SINA_WEIBO, null);
		L.RegVar("QQ", get_QQ, null);
		L.RegVar("QQ_WEIBO", get_QQ_WEIBO, null);
		L.RegVar("ND91", get_ND91, null);
		L.RegVar("WEIXIN", get_WEIXIN, null);
		L.RegVar("TYPE1", get_TYPE1, null);
		L.RegVar("TYPE2", get_TYPE2, null);
		L.RegVar("TYPE3", get_TYPE3, null);
		L.RegVar("TYPE4", get_TYPE4, null);
		L.RegVar("TYPE5", get_TYPE5, null);
		L.RegVar("TYPE6", get_TYPE6, null);
		L.RegVar("TYPE7", get_TYPE7, null);
		L.RegVar("TYPE8", get_TYPE8, null);
		L.RegVar("TYPE9", get_TYPE9, null);
		L.RegVar("TYPE10", get_TYPE10, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<AccountType>.Check = CheckType;
		StackTraits<AccountType>.Push = Push;
	}

	static void Push(IntPtr L, AccountType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(AccountType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ANONYMOUS(IntPtr L)
	{
		ToLua.Push(L, AccountType.ANONYMOUS);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_REGISTERED(IntPtr L)
	{
		ToLua.Push(L, AccountType.REGISTERED);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SINA_WEIBO(IntPtr L)
	{
		ToLua.Push(L, AccountType.SINA_WEIBO);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QQ(IntPtr L)
	{
		ToLua.Push(L, AccountType.QQ);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_QQ_WEIBO(IntPtr L)
	{
		ToLua.Push(L, AccountType.QQ_WEIBO);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ND91(IntPtr L)
	{
		ToLua.Push(L, AccountType.ND91);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WEIXIN(IntPtr L)
	{
		ToLua.Push(L, AccountType.WEIXIN);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE1(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE1);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE2(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE2);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE3(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE3);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE4(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE4);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE5(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE5);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE6(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE6);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE7(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE7);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE8(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE8);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE9(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE9);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TYPE10(IntPtr L)
	{
		ToLua.Push(L, AccountType.TYPE10);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		AccountType o = (AccountType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

