//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaPanelWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaPanel), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Bind", Bind);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("widgets", get_widgets, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Bind(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaPanel obj = (LuaPanel)ToLua.CheckObject<LuaPanel>(L, 1);
			LuaTable arg0 = ToLua.CheckLuaTable(L, 2);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.Bind(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_widgets(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaPanel obj = (LuaPanel)o;
			System.Collections.Generic.List<LuaPanel.Widget> ret = obj.widgets;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index widgets on a nil value");
		}
	}
}

