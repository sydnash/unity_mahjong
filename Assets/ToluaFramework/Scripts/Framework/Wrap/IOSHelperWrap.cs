//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class IOSHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(IOSHelper), typeof(System.Object));
		L.RegFunction("RegisterLoginWXCallback", RegisterLoginWXCallback);
		L.RegFunction("LoginWX", LoginWX);
		L.RegFunction("ShareTextWX", ShareTextWX);
		L.RegFunction("ShareUrlWX", ShareUrlWX);
		L.RegFunction("ShareImageWX", ShareImageWX);
		L.RegFunction("OnLoginWxHandler", OnLoginWxHandler);
		L.RegFunction("New", _CreateIOSHelper);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("instance", get_instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateIOSHelper(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				IOSHelper obj = new IOSHelper();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: IOSHelper.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterLoginWXCallback(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			System.Action<string> arg0 = (System.Action<string>)ToLua.CheckDelegate<System.Action<string>>(L, 2);
			obj.RegisterLoginWXCallback(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoginWX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			obj.LoginWX();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShareTextWX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.ShareTextWX(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShareUrlWX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			UnityEngine.Texture2D arg3 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 5, typeof(UnityEngine.Texture2D));
			bool arg4 = LuaDLL.luaL_checkboolean(L, 6);
			obj.ShareUrlWX(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShareImageWX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			UnityEngine.Texture2D arg0 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 2, typeof(UnityEngine.Texture2D));
			UnityEngine.Texture2D arg1 = (UnityEngine.Texture2D)ToLua.CheckObject(L, 3, typeof(UnityEngine.Texture2D));
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.ShareImageWX(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLoginWxHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			IOSHelper obj = (IOSHelper)ToLua.CheckObject<IOSHelper>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.OnLoginWxHandler(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, IOSHelper.instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

